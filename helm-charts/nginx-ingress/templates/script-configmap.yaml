# Licensed Materials - Property of IBM
# 5737-E67
# @ Copyright IBM Corporation 2016, 2020 All Rights Reserved
# US Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.ingress.name }}-script
  labels:
    app: {{ .Values.ingress.name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: {{ .Values.ingress.name }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    app.kubernetes.io/instance: nginx-ingress-controller
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/name: {{ .Release.Name }}
    helm.sh/chart: {{ .Chart.Name }}
data:
  route.sh: |
    #/bin/bash

    echo "Getting config of ingresscontroller which manages OCP route."
    appDomain=`kubectl -n ${INGRESS_OPERATOR_NAMESPACE} get ingresscontrollers default -o json | python -c "import json,sys;obj=json.load(sys.stdin);print obj['status']['domain'];"`
    if [ $? -ne 0 ]; then
        echo "Failed to get OCP ingress operator config."
        exit 1
    fi

    if [ -z "$INGRESS_ROUTE_HOST" -o "E$INGRESS_ROUTE_HOST" == "Ecp-proxy.apps.ibm.com" ]; then
        HOST="${NAME}.$appDomain"
    else
        HOST="${INGRESS_ROUTE_HOST}"
    fi
    cp /opt/ingress-nginx/config/cp-proxy-route.yaml /opt/ingress-nginx/data/

    echo "Trying to delete the route ${NAME} first."
    kubectl -n ${NAMESPACE} delete -f /opt/ingress-nginx/data/cp-proxy-route.yaml

    echo "Creating route ${NAME} to have correct host: ${HOST}."
    sed -i 's/host: cp-proxy.apps.ibm.com/host: "'$HOST'"/g' /opt/ingress-nginx/data/cp-proxy-route.yaml
    kubectl -n ${NAMESPACE} apply -f /opt/ingress-nginx/data/cp-proxy-route.yaml
    if [ $? -ne 0 ]; then
        echo "Failed to create route ${NAME}."
        exit 1
    fi

    echo "Successfully created route ${NAME}."
    kubectl -n ${NAMESPACE} get route ${NAME}

    kubectl -n ${NAMESPACE} get configmap ibmcloud-cluster-info
    if [ $? -ne 0 ]; then
        echo "Configmap ibmcloud-cluster-info not found, create it"
        kubectl -n ${NAMESPACE} create configmap ibmcloud-cluster-info --from-literal=proxy_address=${HOST} --from-literal=proxy_ingress_https_port=7443 --from-literal=proxy_ingress_http_port=7080
        if [ $? -ne 0 ]; then
            echo "Failed to create configmap ibmcloud-cluster-info"
            exit 1
        fi
        kubectl -n ${NAMESPACE} label configmap ibmcloud-cluster-info app=management-ingress \
        app.kubernetes.io/component=management-ingress \
        app.kubernetes.io/instance=icp-management-ingress \
        app.kubernetes.io/managed-by="" \
        app.kubernetes.io/name=management-ingress \
        component=management-ingress
    else
        #patch configmap
        echo "Patching configmap ibmcloud-cluster-info with proxy_address" ${HOST}
        kubectl -n ${NAMESPACE} patch configmap ibmcloud-cluster-info -p '{"data":{"proxy_address": "'${HOST}'", "proxy_ingress_https_port": "7443", "proxy_ingress_http_port": "7080"}}'
        if [ $? -ne 0 ]; then
            echo "Failed to patch configmap ibmcloud-cluster-info"
            exit 1
        fi
    fi


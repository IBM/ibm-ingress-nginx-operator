# Licensed Materials - Property of IBM
# 5737-E67
# @ Copyright IBM Corporation 2016, 2020 All Rights Reserved
# US Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-ingress
  labels:
    app: {{ .Values.ingress.name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: {{ .Values.ingress.name }}
    heritage: {{ .Release.Service }}
    k8s-app: nginx-ingress-controller
    release: {{ .Release.Name }}
    app.kubernetes.io/instance: nginx-ingress-controller
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/name: {{ .Release.Name }}
    helm.sh/chart: {{ .Chart.Name }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.ingress.name }}
      chart: {{ .Chart.Name }}
      heritage: {{ .Release.Service }}
      component: {{ .Values.ingress.name }}
      k8s-app: nginx-ingress-controller
      release: {{ .Release.Name }}
  {{- if .Values.ingress.replicas }}
  replicas: {{ .Values.ingress.replicas }}
  {{- else }}
  replicas: {{ .Values.ingress.replicaCount }}
  {{- end }}
  template:
    metadata:
      annotations:
        prometheus.io/port: "10254"
        prometheus.io/scrape: "true"
        productName: "IBM Cloud Platform Common Services"
        productID: "068a62892a1e4db39641342e592daa25"
        productMetric: "FREE"
        clusterhealth.ibm.com/dependencies: ""
    {{- if .Values.ingress.annotations }}
{{ toYaml .Values.ingress.annotations | indent 8 }}
    {{- end }}
      labels:
        intent: projected
        app: {{ .Values.ingress.name }}
        chart: {{ .Chart.Name }}
        heritage: {{ .Release.Service }}
        component: {{ .Values.ingress.name }}
        k8s-app: nginx-ingress-controller
        release: {{ .Release.Name }}
        app.kubernetes.io/instance: nginx-ingress-controller
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/name: {{ .Release.Name }}
        helm.sh/chart: {{ .Chart.Name }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ .Values.ingress.name }}
                - key: component
                  operator: In
                  values:
                  - {{ .Values.ingress.name }}
              topologyKey: kubernetes.io/hostname
      hostNetwork: {{ .Values.ingress.hostNetwork }}
      serviceAccount: nginx-ingress
      containers:
      - livenessProbe:
          initialDelaySeconds: 10
          httpGet:
            path: "/healthz"
            scheme: HTTP
            port: 10254
          timeoutSeconds: 1
        name: nginx-ingress
        {{- if .Values.ingress.imageDigest }}
        image: {{ .Values.ingress.imageDigest }}
        {{- else }}
        image: "{{ .Values.ingress.imageRegistry }}/{{ .Values.ingress.image.repository }}:{{ .Values.ingress.image.tag }}"
        {{- end }}
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            drop:
              - ALL
        imagePullPolicy: {{ .Values.ingress.image.pullPolicy }}
        args:
          - /nginx-ingress-controller
          - --default-backend-service=$(POD_NAMESPACE)/{{ .Values.defaultBackend.name }}
          - --configmap=$(POD_NAMESPACE)/{{ .Values.ingress.name }}
          - --annotations-prefix=ingress.kubernetes.io
          - --watch-namespace={{ join "," .Values.ingress.watchNamespace }}
        {{- range $key, $value := .Values.ingress.extraArgs }}
          {{- if $value }}
          - --{{ $key }}={{ $value }}
          {{- else }}
          - --{{ $key }}
          {{- end }}
        {{- end }}
        readinessProbe:
          httpGet:
            path: "/healthz"
            scheme: HTTP
            port: 10254
        ports:
        - name: http
          containerPort: 7080
          protocol: TCP
          {{- if .Values.ingress.hostPort }}
          hostPort: {{ .Values.ingress.httpPort }}
          {{- end }}
        - name: https
          containerPort: 7443
          protocol: TCP
          {{- if .Values.ingress.hostPort }}
          hostPort: {{ .Values.ingress.httpsPort }}
          {{- end }}
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: FIPS_ENABLED
        {{- if .Values.fips_enabled }}
            value: "true"
        {{- else }}
            value: "false"
        {{- end }}
        resources:
{{ toYaml .Values.ingress.resources | indent 10 }}
      nodeSelector:
{{ toYaml .Values.ingress.nodeSelector | indent 8 }}
      tolerations:
{{ toYaml .Values.ingress.tolerations | indent 8 }}
